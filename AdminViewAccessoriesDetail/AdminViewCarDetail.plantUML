@startuml
actor User
participant ManageCarView
participant AdminCarsController
participant AutoMapper
participant JwtTokenHelper
participant CarsDAO
participant VinfastContext
database Database


User -> ManageCarView: Access admin view car detail page
activate ManageCarView

    ManageCarView -> AdminCarsController: get "/api/AdminCars/{id}"
alt try
    activate AdminCarsController

    AdminCarsController -> JwtTokenHelper: AuthenticateAndAuthorize(HttpContext, 1)
        alt Authentication Failure
            activate JwtTokenHelper
            JwtTokenHelper --> AdminCarsController: (isSuccess = false, errorMessage)
            AdminCarsController --> ManageCarView: return Unauthorized(401, errorMessage)
            ManageCarView --> User: Display error message
            
        else Authentication successfully
            JwtTokenHelper --> AdminCarsController: (isSuccess = true, claims)
            deactivate JwtTokenHelper
            
            AdminCarsController -> CarsDAO: AdminGetCarById(int id)
            activate CarsDAO
            
            CarsDAO -> VinfastContext: AdminGetCarById(int id)
            activate VinfastContext
            
            VinfastContext -> Database: Execute query
            activate Database
            Database --> VinfastContext: return car detail data
            deactivate Database
            
            VinfastContext --> CarsDAO: return car detail data
            deactivate VinfastContext
            CarsDAO --> AdminCarsController: return car detail data
            deactivate CarsDAO

            alt No Cars Found
                AdminCarsController --> ManageCarView: return NotFound(404, "Car not found")
                ManageCarView --> User: Display error message
            else Cars Found
                AdminCarsController -> AutoMapper: ToAdminCarDTO(carDetailData)
                activate AutoMapper
                AutoMapper --> AdminCarsController: return DTO 
                deactivate AutoMapper
                AdminCarsController --> ManageCarView: return Ok(200, "Get car successfully", DTO)
                ManageCarView --> User: Show car detail data
            end
        
    end

else Catch Exception
    AdminCarsController --> ManageCarView: return Badrequest(400, exception.Message)
    deactivate AdminCarsController
    ManageCarView --> User: Display error message
deactivate ManageCarView
end




@enduml