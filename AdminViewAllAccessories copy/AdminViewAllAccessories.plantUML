@startuml
actor User
participant ManageAccessoryView
participant AdminAccessoriesController
participant AutoMapper
participant JwtTokenHelper
participant AccessoriesDAO
participant VinfastContext
database Database

User -> ManageAccessoryView: Access admin manage accessories page
activate ManageAccessoryView

    ManageAccessoryView -> AdminAccessoriesController: Call "/api/AdminAccessories"
alt try
    activate AdminAccessoriesController

    AdminAccessoriesController -> JwtTokenHelper: AuthenticateAndAuthorize(HttpContext, 1)
        alt Authentication Failure
            activate JwtTokenHelper
            JwtTokenHelper --> AdminAccessoriesController: (isSuccess = false, errorMessage)
            AdminAccessoriesController --> ManageAccessoryView: Return Unauthorized(401, errorMessage)
            ManageAccessoryView --> User: Display error message
            
        else Authentication successfully
            JwtTokenHelper --> AdminAccessoriesController: (isSuccess = true, claims)
            deactivate JwtTokenHelper
            
            AdminAccessoriesController -> AccessoriesDAO: GetAllAccessories()
            activate AccessoriesDAO
            
            AccessoriesDAO -> VinfastContext: GetAllAccessories()
            activate VinfastContext
            
            VinfastContext -> Database: Execute Query
            activate Database
            Database --> VinfastContext: Return Accessories Data
            deactivate Database
            
            VinfastContext --> AccessoriesDAO: Return Accessories Data
            deactivate VinfastContext
            AccessoriesDAO --> AdminAccessoriesController: Return Accessories List
            deactivate AccessoriesDAO

            alt No Accessories Found
                AdminAccessoriesController --> ManageAccessoryView: Return NotFound(404, "No accessories found")
                ManageAccessoryView --> User: Display Display error message
            else Accessories Found
                AdminAccessoriesController -> AutoMapper: ToAdminAccessoryDTOList(adminAccessories)
                activate AutoMapper
                AutoMapper --> AdminAccessoriesController: Return DTO List
                deactivate AutoMapper
                AdminAccessoriesController --> ManageAccessoryView: Return Ok(200, "Get all accessoriess successfully", DTOs)
                ManageAccessoryView --> User: Display Display error message
            end
        
    end

else Catch Exception
    AdminAccessoriesController --> ManageAccessoryView: Return BadRequest(400, exception.Message)
    deactivate AdminAccessoriesController
    ManageAccessoryView --> User: Display Display error message
deactivate ManageAccessoryView
end




@enduml