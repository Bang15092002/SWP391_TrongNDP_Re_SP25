@startuml
actor User
participant ManageCarView
participant AdminCarsController
participant AutoMapper
participant JwtTokenHelper
participant CarsDAO
participant VinfastContext
database Database


User -> ManageCarView: Access admin manage car page
activate ManageCarView

    ManageCarView -> AdminCarsController: Call "/api/AdminCars"
alt try
    activate AdminCarsController

    AdminCarsController -> JwtTokenHelper: AuthenticateAndAuthorize(HttpContext, 1)
        alt Authentication Failure
            activate JwtTokenHelper
            JwtTokenHelper --> AdminCarsController: (isSuccess = false, errorMessage)
            AdminCarsController --> ManageCarView: Return Unauthorized(401, errorMessage)
            ManageCarView -> User: Display error message
            
        else Authentication successfully
            JwtTokenHelper --> AdminCarsController: (isSuccess = true, claims)
            deactivate JwtTokenHelper
            
            AdminCarsController -> CarsDAO: GetAllCars()
            activate CarsDAO
            
            CarsDAO -> VinfastContext: Query Cars
            activate VinfastContext
            
            VinfastContext -> Database: Execute Query
            activate Database
            Database --> VinfastContext: Return Cars Data
            deactivate Database
            
            VinfastContext --> CarsDAO: Return Cars Data
            deactivate VinfastContext
            CarsDAO --> AdminCarsController: Return Cars List
            deactivate CarsDAO

            alt No Cars Found
                AdminCarsController --> ManageCarView: Return NotFound(404, "No car found")
                ManageCarView -> User: Display Display error message
            else Cars Found
                AdminCarsController -> AutoMapper: ToAdminCarDTOList(adminCars)
                activate AutoMapper
                AutoMapper --> AdminCarsController: Return DTO List
                deactivate AutoMapper
                AdminCarsController --> ManageCarView: Return Ok(200, "Get all cars successfully", DTOs)
                ManageCarView -> User: Display Display error message
            end
        
    end

else Catch Exception
    AdminCarsController --> ManageCarView: Return BadRequest(400, exception.Message)
    deactivate AdminCarsController
    ManageCarView -> User: Display Display error message
deactivate ManageCarView
end




@enduml