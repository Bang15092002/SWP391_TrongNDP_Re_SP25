@startuml
actor User
participant ManageAccessoryView
participant AdminAccessoriesController
participant AutoMapper
participant JwtTokenHelper
participant AccessoriesDAO
participant VinfastContext
database Database


User -> ManageAccessoryView: Access admin view accessory detail page
activate ManageAccessoryView

    ManageAccessoryView -> AdminAccessoriesController: get "/api/AdminAccessories/{id}"
alt try
    activate AdminAccessoriesController

    AdminAccessoriesController -> JwtTokenHelper: AuthenticateAndAuthorize(HttpContext, 1)
        alt Authentication Failure
            activate JwtTokenHelper
            JwtTokenHelper --> AdminAccessoriesController: (isSuccess = false, errorMessage)
            AdminAccessoriesController --> ManageAccessoryView: return Unauthorized(401, errorMessage)
            ManageAccessoryView --> User: Display error message
            
        else Authentication successfully
            JwtTokenHelper --> AdminAccessoriesController: (isSuccess = true, claims)
            deactivate JwtTokenHelper
            
            AdminAccessoriesController -> AccessoriesDAO: AdminGetAccessoryById(int id)
            activate AccessoriesDAO
            
            AccessoriesDAO -> VinfastContext: AdminGetAccessoryById(int id)
            activate VinfastContext
            
            VinfastContext -> Database: Execute query
            activate Database
            Database --> VinfastContext: return accessory detail data
            deactivate Database
            
            VinfastContext --> AccessoriesDAO: return accessory detail data
            deactivate VinfastContext
            AccessoriesDAO --> AdminAccessoriesController: return accessory detail data
            deactivate AccessoriesDAO

            alt No Accessories Found
                AdminAccessoriesController --> ManageAccessoryView: return NotFound(404, "Accessory not found")
                ManageAccessoryView --> User: Display error message
            else Accessories Found
                AdminAccessoriesController -> AutoMapper: ToAdminAccessoryDTO(accessoryDetailData)
                activate AutoMapper
                AutoMapper --> AdminAccessoriesController: return DTO 
                deactivate AutoMapper
                AdminAccessoriesController --> ManageAccessoryView: return Ok(200, "Get accessory successfully", DTO)
                ManageAccessoryView --> User: Show accessory detail data
            end
        
    end

else Catch Exception
    AdminAccessoriesController --> ManageAccessoryView: return Badrequest(400, exception.Message)
    deactivate AdminAccessoriesController
    ManageAccessoryView --> User: Display error message
deactivate ManageAccessoryView
end




@enduml