@startuml
actor Staff
participant AdminUpdateAccessory
participant AdminAccessoriesController
participant JwtTokenHelper
participant AccessoriesDAO
participant VinfastContext
database Database


Staff -> AdminUpdateAccessory: 1. Access admin update accessory page
activate AdminUpdateAccessory

AdminUpdateAccessory -> AdminAccessoriesController: 2. POST "/api/adminUpdateAccessory{id}"
alt try
    activate AdminAccessoriesController
    AdminAccessoriesController -> JwtTokenHelper: 3. AuthenticateAndAuthorize(HttpContext, 1, 3)
    alt Authentication Failure
        activate JwtTokenHelper
        JwtTokenHelper --> AdminAccessoriesController: 4. (isSuccess = false, errorMessage)
        AdminAccessoriesController --> AdminUpdateAccessory: 5. Return Unauthorized(401, errorMessage)
        AdminUpdateAccessory --> Staff: 6. Display error message
        
    else Authentication successfully
        JwtTokenHelper --> AdminAccessoriesController: 7. (isSuccess = true, claims)
        deactivate JwtTokenHelper
        ' complete check authentication
        AdminAccessoriesController -> AccessoriesDAO: 8. GetAccessoryById(id)
        activate AccessoriesDAO
        
        AccessoriesDAO -> VinfastContext: 9. GetAccessoryById(id)
        activate VinfastContext
        
        VinfastContext -> Database: 10. Execute Query
        activate Database
        Database --> VinfastContext: 11. Return Accessory Data (Or null)
        deactivate Database
        
        VinfastContext --> AccessoriesDAO: 12. Return Accessory Data (Or null)
        deactivate VinfastContext
        AccessoriesDAO --> AdminAccessoriesController: 13. Return detail accessory (or null)
        deactivate AccessoriesDAO

        alt Accessory not found (AccessoryData == null)
            AdminAccessoriesController --> AdminUpdateAccessory: 14. Return NotFound(404, "Accessory not found")
            AdminUpdateAccessory --> Staff: 15.Display error message
        else Accessory is found (AccessoryData != null)
            AdminAccessoriesController -> AccessoriesDAO: 16. UpdateAccessory(accessoryData)
            Activate AccessoriesDAO
            AccessoriesDAO -> VinfastContext: 17. UpdateAccessory(accessoryData)
            activate VinfastContext
            VinfastContext -> Database: 18. Execute Query
            activate Database
            Database --> VinfastContext: 19. Return Accessory Data (Or null)
            deactivate Database
            VinfastContext --> AccessoriesDAO: 20. Return Accessory Data (Or null)
            deactivate VinfastContext
            AccessoriesDAO --> AdminAccessoriesController: 21. Return true/false
            deactivate AccessoriesDAO
            alt update accessory failed 
                AdminAccessoriesController --> AdminUpdateAccessory: 22. BadRequest(400, "Update accessory failed")
                AdminUpdateAccessory --> Staff: 23. Display error message
            else Update accessory successfully
                
                AdminAccessoriesController --> AdminUpdateAccessory: 30. Return Ok(200, "update accessory successfully")
                AdminUpdateAccessory --> Staff: 31. Display success message
            end
        end
    end
else Catch Exception
    AdminAccessoriesController --> AdminUpdateAccessory: Return BadRequest(400, exception.Message)
    deactivate AdminAccessoriesController
    AdminUpdateAccessory --> Staff: Display Display error message
deactivate AdminUpdateAccessory
end




@enduml