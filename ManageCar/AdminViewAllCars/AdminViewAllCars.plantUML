@startuml
actor Staff
participant ManageCarView
participant AdminCarsController
participant AutoMapper
participant JwtTokenHelper
participant CarsDAO
participant VinfastContext
database Database


Staff -> ManageCarView: 1. Access manage car admin page
activate ManageCarView

    ManageCarView -> AdminCarsController: 2. Call "/api/AdminCars"
alt try
    activate AdminCarsController

    AdminCarsController -> JwtTokenHelper: 3. AuthenticateAndAuthorize(HttpContext, 1, 3)
        alt Authentication Failure
            activate JwtTokenHelper
            JwtTokenHelper --> AdminCarsController: 4. (isSuccess = false, errorMessage)
            AdminCarsController --> ManageCarView: 5. Return Unauthorized(401, errorMessage)
            ManageCarView --> Staff: 6. Display error message
            
        else Authentication successfully
            JwtTokenHelper --> AdminCarsController: 7. (isSuccess = true, claims)
            deactivate JwtTokenHelper
            
            AdminCarsController -> CarsDAO: 8. GetAllCars()
            activate CarsDAO
            
            CarsDAO -> VinfastContext: 9. GetAllCars()
            activate VinfastContext
            
            VinfastContext -> Database: 10. Execute Query
            activate Database
            Database --> VinfastContext: 11. Return Cars Data
            deactivate Database
            
            VinfastContext --> CarsDAO: 12. Return Cars Data
            deactivate VinfastContext
            CarsDAO --> AdminCarsController: 13. Return Cars List
            deactivate CarsDAO

            alt No Cars Found
                AdminCarsController --> ManageCarView: 14. Return NotFound(404, "No car found")
                ManageCarView --> Staff: 15. Display error message
            else Cars Found
                AdminCarsController -> AutoMapper: 16. ToAdminCarDTOList(adminCars)
                activate AutoMapper
                AutoMapper --> AdminCarsController: 17. Return DTO List
                deactivate AutoMapper
                AdminCarsController --> ManageCarView: 18. Return Ok(200, "Get all cars successfully", DTOs)
                ManageCarView --> Staff: 19. Show list cars
            end
        
    end

else Catch Exception
    AdminCarsController --> ManageCarView: 20. Return BadRequest(400, exception.Message)
    deactivate AdminCarsController
    ManageCarView --> Staff: 21. Display Display error message
deactivate ManageCarView
end




@enduml