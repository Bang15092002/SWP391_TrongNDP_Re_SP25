@startuml
actor User
participant ManageCarView
participant CarsController
participant AutoMapper
participant CarsDAO
participant VinfastContext
database Database


User -> ManageCarView: 1. Access manage car page
activate ManageCarView

    ManageCarView -> CarsController: 2. Call "/api/UserGetAllCars()"
alt try
    activate CarsController

            
            CarsController -> CarsDAO: 3. GetAllCars()
            activate CarsDAO
            
            CarsDAO -> VinfastContext: 4. GetAllCars()
            activate VinfastContext
            
            VinfastContext -> Database: 5. Execute Query
            activate Database
            Database --> VinfastContext: 6. Return Cars Data
            deactivate Database
            
            VinfastContext --> CarsDAO: 7. Return Cars Data
            deactivate VinfastContext
            CarsDAO --> CarsController: 8. Return Cars List
            deactivate CarsDAO

            alt No Cars Found
                CarsController --> ManageCarView: 9. Return NotFound(404, "No car found")
                ManageCarView --> User: 10. Display error message
            else Cars Found
                CarsController -> AutoMapper: 11. ToCarDTOList(adminCars)
                activate AutoMapper
                AutoMapper --> CarsController: 12. Return DTO List
                deactivate AutoMapper
                CarsController --> ManageCarView: 13. Return Ok(200, "Get all cars successfully", DTOs)
                ManageCarView --> User: 14. Show list cars
            end
        

else Catch Exception
    CarsController --> ManageCarView: 15. Return BadRequest(400, exception.Message)
    deactivate CarsController
    ManageCarView --> User: 16. Display Display error message
deactivate ManageCarView
end

@enduml